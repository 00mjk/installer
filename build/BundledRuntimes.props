<Project>
  <PropertyGroup>
    <ArchivePortableSuffix Condition=" '$(UsePortableSharedFramework)' == 'true' ">-portable</ArchivePortableSuffix>
    <InstallerPortableSuffix Condition=" '$(UsePortableSharedFramework)' == 'true' AND '$(OSName)' != 'ubuntu' ">-portable</InstallerPortableSuffix>

    <!-- Downloaded Installers + Archives -->
    <DownloadedSharedHostInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-host-$(ProductMonikerRid).$(SharedHostVersion)$(InstallerPortableSuffix)$(InstallerExtension)</DownloadedSharedHostInstallerFileName>
    <DownloadedSharedHostInstallerFile Condition=" '$(InstallerExtension)' != '' ">$(PackagesDirectory)/$(DownloadedSharedHostInstallerFileName)</DownloadedSharedHostInstallerFile>

    <DownloadedHostFxrInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-hostfxr-$(ProductMonikerRid).$(HostFxrVersion)$(InstallerPortableSuffix)$(InstallerExtension)</DownloadedHostFxrInstallerFileName>
    <DownloadedHostFxrInstallerFile Condition=" '$(InstallerExtension)' != '' ">$(PackagesDirectory)/$(DownloadedHostFxrInstallerFileName)</DownloadedHostFxrInstallerFile>

    <DownloadedSharedFrameworkInstallerFileName Condition=" '$(InstallerExtension)' != '' ">dotnet-sharedframework-$(ProductMonikerRid).$(SharedFrameworkVersion)$(InstallerPortableSuffix)$(InstallerExtension)</DownloadedSharedFrameworkInstallerFileName>
    <DownloadedSharedFrameworkInstallerFile Condition=" '$(InstallerExtension)' != '' ">$(PackagesDirectory)/$(DownloadedSharedFrameworkInstallerFileName)</DownloadedSharedFrameworkInstallerFile>

    <!-- Use the portable linux-x64 Rid when downloading the shared framework compressed file.
         NOTE: There isn't a 'linux-x64' version of the installers or the additional shared framweork. -->
    <SharedFrameworkRid>$(ProductMonikerRid)</SharedFrameworkRid>
    <SharedFrameworkRid Condition=" '$(UsePortableLinuxSharedFramework)' == 'true' ">linux-x64</SharedFrameworkRid>
    <CombinedFrameworkHostCompressedFileName>dotnet-$(SharedFrameworkRid).$(SharedFrameworkVersion)$(ArchivePortableSuffix)$(ArchiveExtension)</CombinedFrameworkHostCompressedFileName>
  </PropertyGroup>

  <PropertyGroup>
    <CoreSetupChannel>release/2.0.0</CoreSetupChannel>
    <CoreSetupBlobRootUrl Condition="'$(CoreSetupBlobRootUrl)' == ''">https://dotnetcli.azureedge.net/dotnet/</CoreSetupBlobRootUrl>
    <CoreSetupBlobRootUrlWithChannel>$(CoreSetupBlobRootUrl)$(CoreSetupChannel)</CoreSetupBlobRootUrlWithChannel>
    <SharedFrameworkArchiveBlobRootUrl>$(CoreSetupBlobRootUrlWithChannel)/Binaries/$(SharedFrameworkVersion)</SharedFrameworkArchiveBlobRootUrl>
    <CoreSetupInstallerBlobRootUrl>$(CoreSetupBlobRootUrlWithChannel)/Installers</CoreSetupInstallerBlobRootUrl>
    <CoreSetupDownloadDirectory>$(IntermediateDirectory)/coreSetupDownload/$(SharedFrameworkVersion)</CoreSetupDownloadDirectory>
    <CombinedSharedHostAndFrameworkArchive>$(CoreSetupDownloadDirectory)/combinedSharedHostAndFrameworkArchive</CombinedSharedHostAndFrameworkArchive>
  </PropertyGroup>

  <PropertyGroup>
    <ASPNETCoreRuntimeInstallerBlobRootUrl>$(CoreSetupBlobRootUrl)aspnetcore/store</ASPNETCoreRuntimeInstallerBlobRootUrl>
    <ASPNETCoreRuntimeDownloadDirectory>$(IntermediateDirectory)/ASPNETCoreRuntimeDownload</ASPNETCoreRuntimeDownloadDirectory>

    <!-- Examples:    Build.RS.linux-preview1.zip    AspNetCorePackageStoreLibx64.wixlib   -->
    <ASPNETCoreRuntimeInstallerFileName Condition=" '$(InstallerExtension)' != '' ">Build.RS.$(OSName)-$(ASPNETCoreRuntimeFileNameVersionToken).zip</ASPNETCoreRuntimeInstallerFileName>
    <ASPNETCoreRuntimeInstallerFileName Condition=" '$(InstallerExtension)' != '' And '$(OSName)' == 'win' ">AspNetCorePackageStoreLib$(Architecture).wixlib</ASPNETCoreRuntimeInstallerFileName>

    <ASPNETCoreRuntimeInstallerFile Condition=" '$(InstallerExtension)' != '' ">$(ASPNETCoreRuntimeDownloadDirectory)/$(ASPNETCoreRuntimeInstallerFileName)</ASPNETCoreRuntimeInstallerFile>
  </PropertyGroup>

  <ItemGroup>
    <_DownloadAndExtractItem Include="CombinedSharedHostAndFrameworkArchive"
                             Condition="!Exists('$(CombinedSharedHostAndFrameworkArchive)')">
      <Url>$(SharedFrameworkArchiveBlobRootUrl)/$(CombinedFrameworkHostCompressedFileName)</Url>
      <DownloadFileName>$(CombinedSharedHostAndFrameworkArchive)</DownloadFileName>
      <ExtractDestination>$(SharedFrameworkPublishDirectory)</ExtractDestination>
    </_DownloadAndExtractItem>

    <_DownloadAndExtractItem Include="DownloadedSharedFrameworkInstallerFile"
                             Condition="'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedSharedFrameworkInstallerFile)') And '$(InstallerExtension)' != ''">
      <Url>$(CoreSetupInstallerBlobRootUrl)/$(SharedFrameworkVersion)/$(DownloadedSharedFrameworkInstallerFileName)</Url>
      <DownloadFileName>$(DownloadedSharedFrameworkInstallerFile)</DownloadFileName>
      <ExtractDestination></ExtractDestination>
    </_DownloadAndExtractItem>

    <_DownloadAndExtractItem Include="DownloadedSharedHostInstallerFile"
                             Condition="'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedSharedHostInstallerFile)') And '$(InstallerExtension)' != ''">
      <Url>$(CoreSetupInstallerBlobRootUrl)/$(SharedHostVersion)/$(DownloadedSharedHostInstallerFileName)</Url>
      <DownloadFileName>$(DownloadedSharedHostInstallerFile)</DownloadFileName>
      <ExtractDestintation></ExtractDestintation>
    </_DownloadAndExtractItem>

    <_DownloadAndExtractItem Include="DownloadedHostFxrInstallerFile"
                             Condition="'$(SkipBuildingInstallers)' != 'true' And !Exists('$(DownloadedHostFxrInstallerFile)') And '$(InstallerExtension)' != ''">
      <Url>$(CoreSetupInstallerBlobRootUrl)/$(HostFxrVersion)/$(DownloadedHostFxrInstallerFileName)</Url>
      <DownloadFileName>$(DownloadedHostFxrInstallerFile)</DownloadFileName>
      <ExtractDestintation></ExtractDestintation>
    </_DownloadAndExtractItem>

    <_DownloadAndExtractItem Include="ASPNETCoreRuntimeInstallerFile"
                             Condition="'$(SkipBuildingInstallers)' != 'true' And !Exists('$(ASPNETCoreRuntimeInstallerFile)') And '$(InstallerExtension)' != ''">
      <Url>$(ASPNETCoreRuntimeInstallerBlobRootUrl)/$(ASPNETCoreRuntimeVersion)/$(ASPNETCoreRuntimeInstallerFileName)</Url>
      <DownloadFileName>$(ASPNETCoreRuntimeInstallerFile)</DownloadFileName>
      <ExtractDestintation>$(IntermediateDirectory)/ASPNETCoreRuntimeStore</ExtractDestintation>
    </_DownloadAndExtractItem>

  </ItemGroup>
</Project>
